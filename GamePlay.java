/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package millionaires.gui;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import millionaires.middle.*;
import millionaires.model.*;

/**
 *
 * @author datqu
 */
public class GamePlay extends javax.swing.JFrame{

    /**
     * Creates new form Game
     */
    public GamePlay(Player p) {
        initComponents();
        try{
            startGame = new GamePlayControl();
            startGame.setPlayer(p);
        }
        catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Unable to start game");
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        A = new javax.swing.JButton();
        YourScoreLabel = new javax.swing.JLabel();
        ScoreLabel = new javax.swing.JLabel();
        CurrScoreLabel = new javax.swing.JLabel();
        CurrMileLabel = new javax.swing.JLabel();
        HeadjLabel = new javax.swing.JLabel();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        B = new javax.swing.JButton();
        HelperButton = new javax.swing.JButton();
        TimeLabel = new javax.swing.JLabel();
        CountdownLabel = new javax.swing.JLabel();
        EndGameButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        QuestionLabel = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(153, 255, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.red);
        setResizable(false);

        A.setBackground(new java.awt.Color(102, 102, 255));
        A.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        A.setForeground(new java.awt.Color(0, 0, 0));
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        YourScoreLabel.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        YourScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YourScoreLabel.setText("Your score");
        YourScoreLabel.setBorder(null);

        ScoreLabel.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
        ScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScoreLabel.setText("000");
        ScoreLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 3));

        CurrScoreLabel.setFont(new java.awt.Font("sansserif", 2, 24)); // NOI18N
        CurrScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrScoreLabel.setText("000");
        CurrScoreLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 3));

        CurrMileLabel.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        CurrMileLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CurrMileLabel.setText("Current milestone");
        CurrMileLabel.setBorder(null);

        HeadjLabel.setFont(new java.awt.Font("sansserif", 3, 48)); // NOI18N
        HeadjLabel.setForeground(new java.awt.Color(255, 0, 0));
        HeadjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeadjLabel.setText("Who Is The Millionaires ?");

        C.setBackground(new java.awt.Color(102, 102, 255));
        C.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        C.setForeground(new java.awt.Color(0, 0, 0));
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        D.setBackground(new java.awt.Color(102, 102, 255));
        D.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        D.setForeground(new java.awt.Color(0, 0, 0));
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        B.setBackground(new java.awt.Color(102, 102, 255));
        B.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        B.setForeground(new java.awt.Color(0, 0, 0));
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        HelperButton.setBackground(new java.awt.Color(255, 102, 255));
        HelperButton.setFont(new java.awt.Font("sansserif", 3, 24)); // NOI18N
        HelperButton.setForeground(new java.awt.Color(255, 255, 255));
        HelperButton.setText("50/50");
        HelperButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 51, 255), 4, true));
        HelperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelperButtonActionPerformed(evt);
            }
        });

        TimeLabel.setFont(new java.awt.Font("sansserif", 1, 22)); // NOI18N
        TimeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TimeLabel.setText("Time");

        CountdownLabel.setBackground(new java.awt.Color(255, 0, 0));
        CountdownLabel.setFont(new java.awt.Font("sansserif", 0, 24)); // NOI18N
        CountdownLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CountdownLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0), 3));

        EndGameButton.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        EndGameButton.setText("End game");
        EndGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndGameButtonActionPerformed(evt);
            }
        });

        QuestionLabel.setEditable(false);
        QuestionLabel.setColumns(20);
        QuestionLabel.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        QuestionLabel.setForeground(new java.awt.Color(0, 0, 0));
        QuestionLabel.setRows(5);
        QuestionLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 3));
        jScrollPane1.setViewportView(QuestionLabel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeadjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CountdownLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(C, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(D, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CurrScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CurrMileLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(YourScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(HelperButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EndGameButton))
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(HeadjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YourScoreLabel)
                    .addComponent(TimeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CountdownLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ScoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(CurrMileLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurrScoreLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(HelperButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EndGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void runGame() {
        QALoader = startGame.getQALoader();
        setAnsNameAdd();
        loadQuest();
        loadScores();
        currQuest = 0;
        rightAns = show( allQuests.get(currQuest) );
    }
    
    private void loadQuest() {
        
        allQuests = new ArrayList();
        allQuests.addAll(QALoader.getEasy());
        allQuests.addAll(QALoader.getMedium());
        allQuests.addAll(QALoader.getHard());
    }
    
    private void loadScores() {
        int easy = 200;
        int medium = 800;
        int hard = 2500;
        scoresList = new ArrayList();
        for (int i = 0; i<QALoader.geteNum(); i++) {
            scoresList.add(easy);
            easy += 100;
        }
        for (int i = 0; i<QALoader.getmNum(); i++) {
            scoresList.add(medium);
            medium += 1000;
        }
        for (int i = 0; i<QALoader.gethNum(); i++) {
            scoresList.add(hard);
            hard *= 2;
        }
    }
    public void countDown() {
        Timer timer = new Timer(); //new timer
        counter = 20; 
        TimerTask task = new TimerTask() {         
            public void run() {                
                CountdownLabel.setText(Integer.toString(counter)); //the timer lable to counter.
                counter--;
                if (counter == -1){
                    timer.cancel();     
                    loseGame();
                } else if(isIt){
                    timer.cancel();
                    isIt = false;
                }
            }
        };
        timer.scheduleAtFixedRate(task, 1000, 1000);
    }
    private JButton show(QA now){
        countDown();
        
        QuestionLabel.setText( (currQuest+1) + ". " + now.getQuest() );
        String[] ans = now.getAnswers();
        ArrayList<Integer> index = new ArrayList();
        JButton rightBut = A;
        
        for (int i = 0; i<ansBoxes.length; i++) {
            index.add(i);
        } 
        for (JButton ansBox : ansBoxes) { 
            int r = rand.nextInt( index.size());   
            int in = index.get(r);      
            if (in == correctAns) {    
                rightBut = ansBox;
            }
            index.remove( r );          
            ansBox.setText(ansBox.getName() + ". " + ans[in]);
        }
        CurrScoreLabel.setText("$" + scoresList.get(currQuest));
        return rightBut;
    }

    
    private void HelperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelperButtonActionPerformed
        startGame.getHelper().help(ansBoxes, rightAns);
    }//GEN-LAST:event_HelperButtonActionPerformed

    private void EndGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndGameButtonActionPerformed
        endGame();
    }//GEN-LAST:event_EndGameButtonActionPerformed

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        checkAns(A, rightAns);
    }//GEN-LAST:event_AActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        checkAns(B, rightAns);
    }//GEN-LAST:event_BActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        checkAns(C, rightAns);
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        checkAns(D, rightAns);
    }//GEN-LAST:event_DActionPerformed
    
    private void checkAns(JButton clicked, JButton right) {
        isIt = true;
        if(clicked == right) {
            startGame.getPlayer().setScore(scoresList.get(currQuest));
            ScoreLabel.setText( "$" + startGame.getPlayer().getScore() );
            currQuest++;
            if(currQuest == allQuests.size()) endGame();
            rightAns = show ( allQuests.get(currQuest));
        }
        else {
            loseGame();
        }
    }
    
    private void endGame() {
        startGame.getPlayer().savePlayer();
        JOptionPane.showMessageDialog(this, "Your score is: " + startGame.getPlayer().getScore());
        if(JOptionPane.CANCEL_OPTION == 2) {
            System.exit(0);
        } 
    }
    
    private void loseGame() {
        int scoreNow = 0;
        int easyNum = QALoader.geteNum();
        int medNum = QALoader.getmNum();
        if(currQuest > easyNum + medNum) scoreNow = scoresList.get(easyNum + medNum);
        else if(currQuest > easyNum) scoreNow = scoresList.get(easyNum);
        startGame.getPlayer().setScore(scoreNow);
        ScoreLabel.setText("$" + scoreNow);
        endGame();
    }
    
    private void setAnsNameAdd() {
        A.setName("A");
        B.setName("B");
        C.setName("C");
        D.setName("D");
        ansBoxes = new JButton[4];
        ansBoxes[0] = A;
        ansBoxes[1] = B;
        ansBoxes[2] = C;
        ansBoxes[3] = D;
    }
    
    private GamePlayControl startGame;
    private QAGameLoader QALoader;
    private Random rand = new Random();
    private JButton[] ansBoxes;
    private final int correctAns = 0;
    private int currQuest;
    private ArrayList<QA> allQuests;
    private ArrayList<Integer> scoresList;
    private JButton rightAns;
    private int counter = 20;
    private Boolean isIt = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton C;
    private javax.swing.JLabel CountdownLabel;
    private javax.swing.JLabel CurrMileLabel;
    private javax.swing.JLabel CurrScoreLabel;
    private javax.swing.JButton D;
    private javax.swing.JButton EndGameButton;
    private javax.swing.JLabel HeadjLabel;
    private javax.swing.JButton HelperButton;
    private javax.swing.JTextArea QuestionLabel;
    private javax.swing.JLabel ScoreLabel;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JLabel YourScoreLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
